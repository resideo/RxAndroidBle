/*
 * Copyright 2013 Chris Banes
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'maven'
apply plugin: 'signing'

version = LIBRARY_VERSION
group = LIBRARY_GROUP

def isReleaseBuild() {
    return LIBRARY_VERSION.contains("SNAPSHOT") == false
}

def getRepositoryUrl() {
    return "https://maven.pkg.github.com/" + GITHUB_OWNER + "/" + GITHUB_REPOSITORY
}

// def getReleaseRepositoryUrl() {
//     return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
//             : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
// }

// def getSnapshotRepositoryUrl() {
//     return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
//             : "https://oss.sonatype.org/content/repositories/snapshots/"
// }

def getRepositoryUsername() {
    return System.getenv('GITHUB_ACTOR') ?: System.getenv('GITHUB_USER')
}

def isAndroidProject() {
    return project.getPlugins().hasPlugin('com.android.application') || project.getPlugins().hasPlugin('com.android.library')
}

def getRepositoryPassword() {
    System.getenv('GITHUB_TOKEN')
}

afterEvaluate {
    project ->
        uploadArchives {
            repositories {
                mavenDeployer {
                    // beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                    pom.groupId = LIBRARY_GROUP
                    pom.artifactId = POM_ARTIFACT_ID
                    pom.version = LIBRARY_VERSION

                    repository(url: getRepositoryUrl()) {
                        authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                    }
                    // snapshotRepository(url: getSnapshotRepositoryUrl()) {
                    //     authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                    // }

                    pom.project {
                        name POM_NAME
                        packaging POM_PACKAGING
                        description POM_DESCRIPTION
                        url POM_URL

                        scm {
                            url POM_SCM_URL
                            connection POM_SCM_CONNECTION
                            developerConnection POM_SCM_DEV_CONNECTION
                        }

                        licenses {
                            license {
                                name POM_LICENCE_NAME
                                url POM_LICENCE_URL
                                distribution POM_LICENCE_DIST
                            }
                        }

                        developers {
                            developer {
                                id POM_DEVELOPER_ID
                                name POM_DEVELOPER_NAME
                            }
                            developer {
                                id POM_DEVELOPER_ID2
                                name POM_DEVELOPER_NAME2
                            }
                        }
                    }
                }
            }
        }

        // signing {
        //     required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
        //     sign configurations.archives
        // }

        if (isAndroidProject()) {
            task install(type: Upload, dependsOn: assemble) {
                repositories.mavenInstaller {
                    configuration = configurations.archives

                    pom.groupId = LIBRARY_GROUP
                    pom.artifactId = POM_ARTIFACT_ID
                    pom.version = LIBRARY_VERSION

                    pom.project {
                        name POM_NAME
                        packaging POM_PACKAGING
                        description POM_DESCRIPTION
                        url POM_URL

                        scm {
                            url POM_SCM_URL
                            connection POM_SCM_CONNECTION
                            developerConnection POM_SCM_DEV_CONNECTION
                        }

                        licenses {
                            license {
                                name POM_LICENCE_NAME
                                url POM_LICENCE_URL
                                distribution POM_LICENCE_DIST
                            }
                        }

                        developers {
                            developer {
                                id POM_DEVELOPER_ID
                                name POM_DEVELOPER_NAME
                            }
                            developer {
                                id POM_DEVELOPER_ID2
                                name POM_DEVELOPER_NAME2
                            }
                        }
                    }
                }
            }

            // task androidJavadocs(type: Javadoc) {
            //     source = android.sourceSets.main.java.source
            //     classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
            //     classpath += configurations.compile
            // }

            // task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
            //     classifier = 'javadoc'
            //     from androidJavadocs.destinationDir
            // }

            // task androidSourcesJar(type: Jar) {
            //     classifier = 'sources'
            //     from android.sourceSets.main.java.source
            // }
        } else {
            install {
                repositories.mavenInstaller {
                    pom.groupId = LIBRARY_GROUP
                    pom.artifactId = POM_ARTIFACT_ID
                    pom.version = LIBRARY_VERSION

                    pom.project {
                        name POM_NAME
                        packaging POM_PACKAGING
                        description POM_DESCRIPTION
                        url POM_URL

                        scm {
                            url POM_SCM_URL
                            connection POM_SCM_CONNECTION
                            developerConnection POM_SCM_DEV_CONNECTION
                        }

                        licenses {
                            license {
                                name POM_LICENCE_NAME
                                url POM_LICENCE_URL
                                distribution POM_LICENCE_DIST
                            }
                        }

                        developers {
                            developer {
                                id POM_DEVELOPER_ID
                                name POM_DEVELOPER_NAME
                            }
                            developer {
                                id POM_DEVELOPER_ID2
                                name POM_DEVELOPER_NAME2
                            }
                        }
                    }
                }
            }

            // task sourcesJar(type: Jar, dependsOn: classes) {
            //     classifier = 'sources'
            //     from sourceSets.main.allSource
            // }

            // task javadocJar(type: Jar, dependsOn: javadoc) {
            //     classifier = 'javadoc'
            //     from javadoc.destinationDir
            // }
        }

        // if (JavaVersion.current().isJava8Compatible()) {
        //     allprojects {
        //         tasks.withType(Javadoc) {
        //             options.addStringOption('Xdoclint:none', '-quiet')
        //         }
        //     }
        // }

        // artifacts {
        //     if (isAndroidProject()) {
        //         archives androidSourcesJar
        //         archives androidJavadocsJar
        //     } else {
        //         archives sourcesJar
        //         archives javadocJar
        //     }
        // }
}

def configurePom(pom) {
    pom.name = POM_NAME
    pom.packaging = POM_PACKAGING
    pom.description = POM_DESCRIPTION
    pom.url = POM_URL

    pom.scm {
        url = POM_SCM_URL
        connection = POM_SCM_CONNECTION
        developerConnection = POM_SCM_DEV_CONNECTION
    }

    if (hasProperty('POM_LICENSE_NAME')) {
        pom.licenses {
            license {
                name = POM_LICENCE_NAME
                url = POM_LICENCE_URL
                distribution = POM_LICENCE_DIST
            }
        }
    }

    pom.developers {
        developer {
            id = POM_DEVELOPER_ID
            name = POM_DEVELOPER_NAME
        }
    }
}
